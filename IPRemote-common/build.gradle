apply plugin: 'java'

version = '1.0'
group = 'svenz'

compileJava.sourceCompatibility = 1.6
compileJava.targetCompatibility = 1.6

compileTestJava.sourceCompatibility = 1.8
compileTestJava.targetCompatibility = 1.8

task sourcesJar(type: Jar, dependsOn: classes) {
	classifier 'sources'
	from sourceSets.main.allSource
}
	 
artifacts {
	archives sourcesJar
}
	
repositories {
    mavenCentral()
}

dependencies {
    compile ([
            'commons-collections:commons-collections:3.2.1',
            'commons-configuration:commons-configuration:1.10',
            'commons-lang:commons-lang:2.6',
            'org.slf4j:slf4j-api:'+revSLF4j,
            'org.simpleframework:simple-xml:2.7.1'
        ])
    testCompile ([
            'junit:junit:4.+',
            'org.easymock:easymock:3.2',
            'org.slf4j:jcl-over-slf4j:'+revSLF4j,
            'org.slf4j:slf4j-log4j12:'+revSLF4j,
        ])
}

test {
    exclude '**/devicetests/**'
}

eclipse.classpath {
  containers.clear()
  file {
    beforeMerged { classpath ->
        classpath.entries.removeAll { entry -> entry.kind == 'lib' || entry.kind == 'var' }
    }
    whenMerged { classpath ->
        classpath.entries.findAll { entry -> entry.kind == 'lib' }*.exported = false
        // keep src with output
        def srcs = classpath.entries.findAll({ entry -> entry.kind == 'src' && entry.output != null })
                                    .collect({ entry -> entry.path })
        classpath.entries.removeAll { entry -> entry.kind == 'src' && entry.output == null && srcs.contains(entry.path) }
    }
  }
}